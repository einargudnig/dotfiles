
# eval "$(starship init zsh)"
export STARSHIP_CONFIG=~/.config/starship/starship.toml

# zsh autosuggestions
source /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh
# zsh syntax highlighting
source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

export EDITOR=/opt/homebrew/bin/nvim

# history setup
HISTFILE=$HOME/.zhistory
SAVEHIST=1000
HISTSIZE=999
setopt share_history
setopt hist_expire_dups_first
setopt hist_ignore_dups
setopt hist_verify

# Git aliases
alias ga='git add'
alias gc='git commit'
alias gp='git push'
alias gs='git status'
alias gcmsg='git commit -m'

# zsh theme?
source ~/dotfiles/zsh/catppuccin_mocha-zsh-syntax-highlighting.zsh

bindkey '^[[A' history-search-backward
bindkey '^[[B' history-search-forward

# fzf is fuzzy finding for the terminal
source <(fzf --zsh)

# eza is improved ls
alias ls="eza --icons=always"
alias lt="eza --tree level-2 --icons --git"

# zoxide (better cd)
eval "$(zoxide init zsh)"

alias cd="z"

# To help aerospace
#def ff [] {
#    aerospace list-windows --all | fzf --bind 'enter:execute(bash -c "aerospace focus --window-id {1}")+abort'
#}

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_OPS="--extended --layout=reverse"
if type rg &> /dev/null; then
  export FZF_DEFAULT_COMMAND='rg --files'
  export FZF_DEFAULT_OPTS='-m --height 50% --border --layout=reverse'
fi

# for sesh
# function t() {
#   {
#     exec </dev/tty
#     exec <&1
#     local session
#     session=$(sesh list -t -c | fzf --height 40% --reverse --border-label ' sesh ' --border --prompt 'âš¡  ')
#     [[ -z "$session" ]] && return
#     sesh connect $session
#   }
# }

# yazi is a terminal explorer
# use y instead of yazi to start, and pressq to quit.
# press Q to quit without changing directory
# We suggest using this y shell wrapper that provides the ability to change directories
function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

# fzf catpuccin mocha color theme
export FZF_DEFAULT_OPTS=" \
--color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8 \
--color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
--color=marker:#b4befe,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8 \
--color=selected-bg:#45475a \
--multi"

eval "$(starship init zsh)"

. "$HOME/.atuin/bin/env"

eval "$(atuin init zsh)"

# Added by Windsurf
export PATH="/Users/einargudjonsson/.codeium/windsurf/bin:$PATH"

PATH=~/.console-ninja/.bin:$PATH
# bun completions
[ -s "/Users/einargudjonsson/.bun/_bun" ] && source "/Users/einargudjonsson/.bun/_bun"

# Added by LM Studio CLI (lms)
export PATH="$PATH:/Users/einargudjonsson/.lmstudio/bin"
# End of LM Studio CLI section


# pnpm
export PNPM_HOME="/Users/einargudjonsson/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/opt/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/opt/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

eval "$(fnm env --use-on-cd --shell zsh)"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

# fnm
FNM_PATH="/Users/einargudjonsson/Library/Application Support/fnm"
if [ -d "$FNM_PATH" ]; then
  export PATH="/Users/einargudjonsson/Library/Application Support/fnm:$PATH"
  eval "`fnm env`"
fi
